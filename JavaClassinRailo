using Application.cfc

1 in Application.cfc add:
<cfcomponent>
<cfset THIS.javaSettings = {LoadPaths = [".\lib\"],  reloadOnChange= true, watchInterval = 30, } >
</cfcomponent>

2. in lib folder add test.java and compile to test.class   (if you are using some imports add them in set classpath
c:\user>set classpath=%classpath%;C:\Users\vkoloyu\jars\mail.jar;
and only after that > compile)
3 in cfm file instantiate the class:
<cfobject type="java" class="test" name="myObj"> 
<cfset y = myObj.init()> 

and use it #y.callmethodfromjavaclass()#






____
https://helpx.adobe.com/coldfusion/developing-applications/using-web-elements-and-external-objects/integrating-jee-and-java-elements-in-cfml-applications/enhanced-java-integration-in-coldfusion.html

Create a Java file, Test.java.

public class Test 
{ 
public String testJava() 
{ 
return "Hello Java!!"; 
} 
}

 

Compile the Java file using a Java compiler.   javac file.java
!!!!!!!
if you are using some imports add them in set classpath
c:\user>set classpath=%classpath%;C:\Users\vkoloyu\jars\mail.jar;
and only after that > compile




Add the following entry to the Application.cfc of your project:

<cfset THIS.javaSettings = {LoadPaths = ["/myJava/lib"],reloadOnChange=true,watchInterval=30}/>

 

Create the following directory structure in your application folder:

/myJava/lib

 

Copy the Test.class file to the /myJava/lib folder.
Create a CFM file with the following content.

<cfobject type="java" class="Test" name="myObj"> 
<cfset y = myObj.init()> 
<cfoutput > 
#y.testJava()# 
</cfoutput>

 

Deploy the application and access the CFM file.



// or use java loader
http://burnignorance.com/coldfusion-application-development/javaloader-in-coldfusion/   http://javaloader.riaforge.org/

Here are the few steps  for implementating JavaLoader-
Download the JavaLoader jar file by hitting the url .(http://javaloader.riaforge.org/)
Extract and put the JavaLoader folder inside your project folder.
Now suppose-
our Project folder is: D\Projects\MyJavaloader
Url :(http://localhost/MyJavaLoader/)
 
Javaloader folder is placed inside: D\Projects\MyJavaloader\Javaloader.
 
Let say we have placed the two jar files viz. ‘Car.jar’ and ‘Bike.jar’ containing bmw and pulsar classes respectively anywhere inside our project folder.
 
 
Code Snippet:
<cfscript>
 
// An Array with absolute file paths of the referred jar files.
 
filePaths = ArrayNew(1);
filePaths
[1] = expandPath("Car.jar”);
filePaths[2] = expandPath("Bike.jar”);
 
//Creating a java loader object by passing in the array containing the file paths –
loaderObj =createObject("component","MyJavaloader.Javaloader.JavaLoader”).init(paths);
[
//So now, we can simply create a instance of an object from the ‘bmw’ and ‘pulsar’ class.
   bmw = loaderObj.create("bmw").init();
   pulsar = loaderObj.create("pulsar").init();
 
/*Note:For accessing  static method  we need to remove the init method while instantiating an object.
   For example-
staticClassObj
= loaderObj.create("staticClassName");
   result = staticClassObj.getTheOutput(arguments);
*/
   
</cfscript>
